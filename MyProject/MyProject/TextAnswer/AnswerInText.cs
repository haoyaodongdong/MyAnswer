namespace MyProject.TextAnswer
{
    /*public class AnswerInText
    {
    1.一般来讲有 ：
        
        P2P架构：主机之间点对点形成拓扑结构，‌每个客户端既充当游戏的主机又充当客户机，弊端很多，不适用与休闲三消除。
        
        HTTP(S)方案：虽然可以用于大量的通信，属于短链接，但是不适用于低延迟通信，且不断创建销毁，容易消耗服务器性能。
        一般用与资源包和脚本的更新。
        
        TCP长连接：数据可靠稳定。延迟小，对客户端用户较为友好。编写起来稍微复杂，是个“流”式的协议，会根据TCP缓冲区的实际情况进行包的划分。
        
        UDP 提供面向无连接的通信服务，传输途中如果出现了丢包，UDO也不负责重发。甚至当出现包的到达顺序乱掉时也没有纠正的功能
    2.
        弱网下的稳定性，和高并发下的稳定和性能消耗。
        模块化黑盒话，易于使用。不用在乎实现细节。
        如果需要，应实现网络流加密功能。
        处理复杂网络（边界排查）断网，处理粘包拆包丢包问题。
        实现断网重连功能
        
    3.
         高延迟网络下的界面表现。协议上下行期间，正确阻止玩家瞬点。复杂网络情况下的丢包问题。反作弊等...
        
    }*/
}